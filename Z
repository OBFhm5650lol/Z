game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Warning",
    Text = "This May Not Be That Extremely Accurate",
    Duration= "5";
})

task.wait(5)

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Started..",
    Text = "Game Detected",
    Duration= "5";
})

-- Create the main GUI frame
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AntiCheatScanner"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Detect platform (PC or Mobile)
local isMobile = game:GetService("UserInputService").TouchEnabled
local isPC = not isMobile

-- Set sizes based on platform
local guiWidth, guiHeight = isPC and 450 or 300, isPC and 300 or 200
local wavePointDensity = isPC and 1.5 or 2.5
local counterFontSize, acFontSize = isPC and 18 or 14, isPC and 18 or 14

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, guiWidth, 0, guiHeight)
frame.Position = UDim2.new(0.5, -guiWidth/2, 0.5, -guiHeight/2)
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.ClipsDescendants = true
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

-- Close button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 20, 0, 20)
closeButton.Position = UDim2.new(1, -25, 0, 5)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeButton.BorderSizePixel = 0
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 14
closeButton.ZIndex = 2
closeButton.Parent = frame

closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Get game name
local gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
if #gameName > 20 then
    gameName = string.sub(gameName, 1, 17).."..."
end

-- Header with AC info
local header = Instance.new("Frame")
header.Size = UDim2.new(1, -40, 0, 25)
header.Position = UDim2.new(0, 5, 0, 5)
header.BackgroundTransparency = 1
header.Parent = frame

local acLabel = Instance.new("TextLabel")
acLabel.Size = UDim2.new(0.6, 0, 1, 0)
acLabel.Position = UDim2.new(0, 0, 0, 0)
acLabel.Text = "scanning AC... | "..gameName
acLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
acLabel.BackgroundTransparency = 1
acLabel.Font = Enum.Font.SourceSansBold
acLabel.TextSize = acFontSize
acLabel.TextXAlignment = Enum.TextXAlignment.Left
acLabel.TextTruncate = Enum.TextTruncate.AtEnd
acLabel.Parent = header

local counterLabel = Instance.new("TextLabel")
counterLabel.Size = UDim2.new(0.4, 0, 1, 0)
counterLabel.Position = UDim2.new(0.6, 0, 0, 0)
counterLabel.Text = "[00.0]"
counterLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
counterLabel.BackgroundTransparency = 1
counterLabel.Font = Enum.Font.SourceSansBold
counterLabel.TextSize = counterFontSize
counterLabel.TextXAlignment = Enum.TextXAlignment.Right
counterLabel.Parent = header

-- Canvas for the visualization
local canvas = Instance.new("Frame")
canvas.Size = UDim2.new(1, -10, 1, -40)
canvas.Position = UDim2.new(0, 5, 0, 35)
canvas.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
canvas.BorderSizePixel = 0
canvas.Parent = frame

-- List of common AntiCheat names to detect
local commonACNames = {
    "AntiCheat", "AntiExploitScript", "AC_", "SecurityModule",
    "AntiHack", "ExploitProtection", "CheatDetection", "HackShield",
    "VAC", "MoonSec", "SimpleSpy", "Synapse", "Kick", "Ban",
    "AntiExploit", "ExploitDetection", "HackDetection", "AntiInject",
    "ScriptProtection", "ScriptShield", "AntiTamper", "MemoryProtect"
}

-- Enhanced AntiCheat detection function
local function detectAntiCheat()
    local foundAC = {}
    local acStrength = 0
    local totalPossibleStrength = 0
    
    -- Check all game services for AC components
    local servicesToCheck = {
        game:GetService("ReplicatedStorage"),
        game:GetService("ServerScriptService"),
        game:GetService("Players").LocalPlayer:WaitForChild("PlayerScripts"),
        game:GetService("Workspace"),
        game:GetService("Lighting")
    }
    
    -- Check for specific AC names and components
    for _, service in ipairs(servicesToCheck) do
        for _, item in pairs(service:GetDescendants()) do
            for _, acName in ipairs(commonACNames) do
                if string.find(string.lower(item.Name), string.lower(acName)) then
                    local strength = 1 -- Base strength
                    
                    -- Increase strength for certain components
                    if item:IsA("RemoteEvent") or item:IsA("RemoteFunction") then
                        strength = strength + 2
                    elseif item:IsA("Script") or item:IsA("ModuleScript") then
                        strength = strength + 3
                    elseif item:IsA("BindableEvent") or item:IsA("BindableFunction") then
                        strength = strength + 1
                    end
                    
                    table.insert(foundAC, {
                        name = item.Name,
                        path = item:GetFullName(),
                        type = item.ClassName,
                        strength = strength
                    })
                    acStrength = acStrength + strength
                    totalPossibleStrength = totalPossibleStrength + 5 -- Max per item
                end
            end
        end
    end
    
    -- Check for hidden or protected scripts
    local hiddenACFound = false
    pcall(function()
        for _, v in pairs(getnilinstances()) do
            for _, acName in ipairs(commonACNames) do
                if string.find(string.lower(v.Name), string.lower(acName)) then
                    hiddenACFound = true
                    table.insert(foundAC, {
                        name = v.Name,
                        path = "Hidden Instance",
                        type = v.ClassName,
                        strength = 5 -- High strength for hidden AC
                    })
                    acStrength = acStrength + 5
                    totalPossibleStrength = totalPossibleStrength + 5
                end
            end
        end
    end)
    
    -- Check for memory protection
    local memoryProtected = false
    pcall(function()
        if not game:GetService("Stats").PerformanceStats:GetChildren() then
            memoryProtected = true
            table.insert(foundAC, {
                name = "Memory Protection",
                path = "Game Stats",
                type = "System",
                strength = 4
            })
            acStrength = acStrength + 4
            totalPossibleStrength = totalPossibleStrength + 5
        end
    end)
    
    -- Determine AC level
    local acPercentage = totalPossibleStrength > 0 and (acStrength / totalPossibleStrength) * 100 or 0
    local acLevel, acColor
    
    if #foundAC == 0 then
        acLevel = "None"
        acColor = Color3.fromRGB(255, 0, 0) -- Red
    elseif acPercentage < 30 then
        acLevel = "Weak"
        acColor = Color3.fromRGB(255, 165, 0) -- Orange
    elseif acPercentage < 60 then
        acLevel = "Medium"
        acColor = Color3.fromRGB(255, 255, 0) -- Yellow
    elseif acPercentage < 85 then
        acLevel = "Strong"
        acColor = Color3.fromRGB(0, 255, 0) -- Green
    else
        acLevel = "Extreme"
        acColor = Color3.fromRGB(0, 0, 255) -- Blue
    end
    
    return {
        level = acLevel,
        strength = acStrength,
        maxStrength = totalPossibleStrength,
        percentage = acPercentage,
        color = acColor,
        foundAC = foundAC,
        components = #foundAC
    }
end

-- Run AntiCheat detection
local acData = detectAntiCheat()
local acLevel = acData.level
local acColor = acData.color

-- Update label with AC info
acLabel.Text = acLevel.." AC ("..math.floor(acData.percentage).."%) | "..gameName
acLabel.TextColor3 = acColor

-- Set parameters based on AC level
local frequency, amplitude, speed, counterSpeed
if acLevel == "None" then
    frequency = 0
    amplitude = 0
    speed = 0
    counterSpeed = 0.1
elseif acLevel == "Weak" then
    frequency = 0.5
    amplitude = isPC and 40 or 30
    speed = 0.5
    counterSpeed = 0.5
elseif acLevel == "Medium" then
    frequency = 1
    amplitude = isPC and 60 or 40
    speed = 1
    counterSpeed = 1
elseif acLevel == "Strong" then
    frequency = 1.5
    amplitude = isPC and 80 or 50
    speed = 1.5
    counterSpeed = 1.5
else -- Extreme
    frequency = 2
    amplitude = isPC and 100 or 60
    speed = 2
    counterSpeed = 2
end

-- Visualization drawing function
local function drawVisualization(time)
    local width = canvas.AbsoluteSize.X
    local height = canvas.AbsoluteSize.Y
    local centerY = height / 2
    
    -- Clear previous drawings
    for _, child in ipairs(canvas:GetChildren()) do
        if child:IsA("Frame") then
            child:Destroy()
        end
    end
    
    if acLevel == "None" then
        -- Draw straight line for no AC
        for x = 0, width, wavePointDensity do
            local point = Instance.new("Frame")
            point.Size = UDim2.new(0, 2, 0, 2)
            point.Position = UDim2.new(0, x, 0, centerY - 1)
            point.BackgroundColor3 = acColor
            point.BorderSizePixel = 0
            point.Parent = canvas
        end
    else
        -- Draw dynamic visualization based on AC strength
        for x = 0, width, wavePointDensity do
            local normalizedX = x / width * 2 * math.pi
            local y = centerY + math.sin(normalizedX * frequency + time * speed) * amplitude
            
            -- Add some randomness for stronger AC
            if acLevel == "Strong" or acLevel == "Extreme" then
                y = y + math.random(-5, 5)
            end
            
            local point = Instance.new("Frame")
            point.Size = UDim2.new(0, 2, 0, 2)
            point.Position = UDim2.new(0, x, 0, y - 1)
            point.BackgroundColor3 = acColor
            point.BorderSizePixel = 0
            point.Parent = canvas
        end
        
        -- Add extra effects for extreme AC
        if acLevel == "Extreme" then
            for i = 1, 3 do
                local sparkX = math.random(0, width)
                local sparkY = math.random(0, height)
                local spark = Instance.new("Frame")
                spark.Size = UDim2.new(0, 3, 0, 3)
                spark.Position = UDim2.new(0, sparkX, 0, sparkY)
                spark.BackgroundColor3 = Color3.fromRGB(255, 0, 255)
                spark.BorderSizePixel = 0
                spark.Parent = canvas
            end
        end
    end
end

-- Counter update function
local function updateCounter(time)
    -- Generate random number between 0 and 99.9
    local randomValue = math.floor(math.random() * 1000) / 10
    -- Format with leading zero if needed
    local formattedValue = string.format("[%05.1f]", randomValue)
    counterLabel.Text = formattedValue
end

-- Animation loop
local heartbeatConnection
local lastCounterUpdate = 0
heartbeatConnection = game:GetService("RunService").Heartbeat:Connect(function(step)
    local time = tick()
    drawVisualization(time)
    
    -- Update counter at different rates based on AC level
    if time - lastCounterUpdate > (1 / counterSpeed) then
        updateCounter(time)
        lastCounterUpdate = time
    end
end)

-- Add details button
local detailsButton = Instance.new("TextButton")
detailsButton.Size = UDim2.new(0, 100, 0, 25)
detailsButton.Position = UDim2.new(0.5, -50, 1, -30)
detailsButton.Text = "AC Components ("..acData.components..")"
detailsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
detailsButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
detailsButton.BorderSizePixel = 0
detailsButton.Font = Enum.Font.SourceSansBold
detailsButton.TextSize = 14
detailsButton.Parent = frame

-- Details frame
local detailsFrame = Instance.new("Frame")
detailsFrame.Size = UDim2.new(1, -20, 0, 150)
detailsFrame.Position = UDim2.new(0, 10, 1, 10)
detailsFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
detailsFrame.BorderSizePixel = 0
detailsFrame.Visible = false
detailsFrame.Parent = frame

local detailsScroll = Instance.new("ScrollingFrame")
detailsScroll.Size = UDim2.new(1, -10, 1, -10)
detailsScroll.Position = UDim2.new(0, 5, 0, 5)
detailsScroll.BackgroundTransparency = 1
detailsScroll.ScrollBarThickness = 5
detailsScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
detailsScroll.Parent = detailsFrame

local detailsText = ""
if #acData.foundAC > 0 then
    for i, ac in ipairs(acData.foundAC) do
        detailsText = detailsText .. string.format("%d. %s (%s) - %s\n", i, ac.name, ac.type, ac.path)
    end
else
    detailsText = "No AntiCheat components found"
end

local detailsLabel = Instance.new("TextLabel")
detailsLabel.Size = UDim2.new(1, -10, 0, #acData.foundAC * 20 + 20)
detailsLabel.Position = UDim2.new(0, 5, 0, 5)
detailsLabel.Text = detailsText
detailsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
detailsLabel.BackgroundTransparency = 1
detailsLabel.Font = Enum.Font.SourceSans
detailsLabel.TextSize = 14
detailsLabel.TextXAlignment = Enum.TextXAlignment.Left
detailsLabel.TextYAlignment = Enum.TextYAlignment.Top
detailsLabel.Parent = detailsScroll

detailsScroll.CanvasSize = UDim2.new(0, 0, 0, detailsLabel.AbsoluteContentSize.Y + 10)

-- Toggle details
detailsButton.MouseButton1Click:Connect(function()
    detailsFrame.Visible = not detailsFrame.Visible
    detailsButton.Text = detailsFrame.Visible and 
        "Hide Components ("..acData.components..")" or 
        "AC Components ("..acData.components..")"
end)

-- Cleanup when GUI is closed
frame.Destroying:Connect(function()
    if heartbeatConnection then
        heartbeatConnection:Disconnect()
    end
end)
